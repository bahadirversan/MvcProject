@model Entity.Concrete.Author
@{
    ViewBag.Title = "AddAuthor";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h1>Yeni Yazar Ekleme</h1>
<br />
@using (Html.BeginForm("AddAuthor", "Author", FormMethod.Post))
{
    <div class="form-group">
        @Html.Label("Yazar Adı")
        @Html.TextBoxFor(x => x.AuthorName, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorName)
        <br />
        @Html.Label("Yazar Soyadı")
        @Html.TextBoxFor(x => x.AuthorSurname, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorSurname)
        <br />
        @Html.Label("Yazar Mail")
        @Html.TextBoxFor(x => x.AuthorMail, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorMail)
        <br />
        @Html.Label("Yazar Şifresi")
        @Html.TextBoxFor(x => x.AuthorPassword, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorPassword)
        <br />
        @Html.Label("Yazar Görsel Linki")
        @Html.TextBoxFor(x => x.AuthorImage, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorImage)
        <br />
        @Html.Label("Yazar Unvanı")
        @Html.TextBoxFor(x => x.AuthorTitle, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorTitle)
        <br />
        @Html.Label("Yazar Hakkında")
        @Html.TextBoxFor(x => x.AuthorAbout, new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.AuthorAbout)
        <br />
        <button class="btn btn-info">Yazarı Ekle</button>
    </div>
}

